openapi: 3.0.3
info:
  title: TH1
  description: TH1
  version: 1.0.0

servers:
  - url: 'http://localhost:{port}/v1'
    description: Local server
    variables: {
      port: {
        default: '8080'
      }
    }
  - url: 'http://pg-doener-dev.virt.uni-oldenburg.de:{port}/v1'
    description: Dev server
    variables: {
      port: {
        default: '8080'
      }
    }
  - url: 'http://pg-doener-prod.virt.uni-oldenburg.de:{port}/v1'
    description: Prod server
    variables: {
      port: {
        default: '8080'
      }
    }

security:
  - BasicAuth: [ ]

components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
  schemas:
    tableStructure:
      type: object
      required:
        - name
        - delimiter
        - structures
      properties:
        id:
          type: integer
          format: int64
          minimum: 1
        name:
          type: string
          minLength: 1
          example: 'Table structure 1'
        delimiter:
          type: string
          maxLength: 1
          example: ';'
        structures:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/structure'
        endRow:
          type: integer
          minimum: 1
        endColumn:
          type: integer
          minimum: 1

    structure:
      type: object
      x-class-extra-annotation: "@de.uol.pgdoener.th1.api.validation.ValidStructure"
      required:
        - converterType
      properties:
        converterType:
          $ref: '#/components/schemas/converterType'
        columnIndex:
          type: array
          minItems: 0
          items:
            type: integer
            minimum: 0
        rowIndex:
          type: array
          minItems: 0
          items:
            type: integer
            minimum: 0
        startRow:
          type: integer
          minimum: 0
        startColumn:
          type: integer
          minimum: 0
        endRow:
          type: integer
          minimum: 0
        endColumn:
          type: integer
          minimum: 0
        headerNames:
          type: array
          minItems: 0
          items:
            type: string
            minimum: 0

    tableStructureSummary:
      type: object
      required:
        - id
        - name
        - structures
      properties:
        id:
          type: integer
          format: int64
          minimum: 1
        name:
          type: string
          minLength: 1
        structures:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/structureSummary'

    structureSummary:
      type: object
      required:
        - converterType
      properties:
        converterType:
          $ref: '#/components/schemas/converterType'

    converterType:
      type: string
      x-field-extra-annotation: "@de.uol.pgdoener.th1.api.validation.ValidConverterType"
      enum:
        - REMOVE_GROUPED_HEADER
        - FILL_EMPTY_ROW
        - REMOVE_COLUMN_BY_INDEX
        - REMOVE_ROW_BY_INDEX
        - ADD_HEADER_NAME

paths:
  /table-structures:
    get:
      summary: Get all table structures
      operationId: getTableStructures
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/tableStructureSummary'
        '401':
          description: Unauthorized
    post:
      summary: Create a new table structure
      operationId: createTableStructure
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tableStructure'
      responses:
        '201':
          description: Created
        '400':
          description: Bad request
        '401':
          description: Unauthorized
  /table-structures/{id}:
    get:
      summary: Get a table structure by id
      operationId: getTableStructure
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tableStructure'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not found

  /converter/{tableStructureId}:
    post:
      summary: Convert a table and save it to the database
      operationId: convertTable
      parameters:
        - name: tableStructureId
          in: path
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required: [ file ]
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not found
  /converter/preview:
    post:
      summary: Convert a table and return a preview of the result
      operationId: previewConvertTable
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required: [ file, tableStructure ]
              properties:
                file:
                  type: string
                  format: binary
                tableStructure:
                  $ref: '#/components/schemas/tableStructure'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: string
        '400':
          description: Bad request
        '401':
          description: Unauthorized
  /converter/file:
    post:
      summary: Convert a table and return the result as a file
      operationId: fileConvertTable
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required: [ file, tableStructure ]
              properties:
                file:
                  type: string
                  format: binary
                tableStructure:
                  $ref: '#/components/schemas/tableStructure'
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: Bad request
        '401':
          description: Unauthorized
