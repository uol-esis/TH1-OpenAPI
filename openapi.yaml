openapi: 3.0.3
info:
  description: TH1
  title: TH1
  version: 1.13.0
servers:
- description: Local server
  url: "http://localhost:{port}/api/v1"
  variables:
    port:
      default: "8080"
- description: Dev server
  url: "http://pg-doener-dev.virt.uni-oldenburg.de:{port}/api/v1"
  variables:
    port:
      default: "8080"
- description: Prod server
  url: "http://pg-doener-prod.virt.uni-oldenburg.de:{port}/api/v1"
  variables:
    port:
      default: "8080"
security:
- BasicAuth: []
paths:
  /table-structures:
    get:
      operationId: getTableStructures
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/tableStructureSummary'
                type: array
          description: OK
        "401":
          description: Unauthorized
      summary: Get all table structures
    post:
      operationId: createTableStructure
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tableStructure'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                format: int64
                minimum: 1
                type: integer
          description: Created
        "400":
          description: Bad request
        "401":
          description: Unauthorized
      summary: Create a new table structure
  /table-structures/{id}:
    delete:
      operationId: deleteTableStructure
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Not found
      summary: Delete table structure by id
    get:
      operationId: getTableStructure
      parameters:
      - in: path
        name: id
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tableStructure'
          description: OK
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Not found
      summary: Get a table structure by id
  /table-structures/generate:
    post:
      operationId: generateTableStructure
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/generateTableStructure_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tableStructureGenerationResponse'
          description: OK
        "400":
          description: Bad request
        "401":
          description: Unauthorized
      summary: Generate a tableStructure and return the result as a json
  /converter/{tableStructureId}:
    post:
      operationId: convertTable
      parameters:
      - in: path
        name: tableStructureId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/convertTable_request'
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Not found
      summary: Convert a table and save it to the database
  /converter/preview:
    post:
      operationId: previewConvertTable
      parameters:
      - in: query
        name: limit
        required: false
        schema:
          default: 10
          minimum: 1
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/previewConvertTable_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  items:
                    type: string
                  type: array
                type: array
          description: OK
        "400":
          description: Bad request
        "401":
          description: Unauthorized
      summary: Convert a table and return a preview of the result
  /converter/file:
    post:
      operationId: fileConvertTable
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/previewConvertTable_request'
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: OK
        "400":
          description: Bad request
        "401":
          description: Unauthorized
      summary: Convert a table and return the result as a file
  /feedback:
    post:
      operationId: submitFeedback
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/feedback'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                format: int64
                minimum: 1
                type: integer
          description: Created
        "400":
          description: Bad request
        "401":
          description: Unauthorized
      summary: Submit feedback
components:
  schemas:
    tableStructure:
      example:
        id: 1
        name: Table structure 1
        structures:
        - name: Fill Header
          description: Fills empty cells in the header
          converterType: FILL_EMPTY_ROW
          rowIndex:
          - 0
          - 1
        - name: Resolve Grouped Header
          description: Resolves the grouped header
          converterType: REMOVE_GROUPED_HEADER
          rowIndex:
          - 0
          - 1
          columnIndex:
          - 0
          startRow: 3
          startColumn: 0
      properties:
        id:
          format: int64
          minimum: 1
          type: integer
        name:
          example: Table structure 1
          minLength: 1
          type: string
        structures:
          items:
            $ref: '#/components/schemas/structure'
          minItems: 0
          type: array
        endRow:
          minimum: 1
          type: integer
        endColumn:
          minimum: 1
          type: integer
      required:
      - delimiter
      - name
      - structures
      type: object
    structure:
      discriminator:
        mapping:
          REMOVE_GROUPED_HEADER: '#/components/schemas/removeGroupedHeaderStructure'
          FILL_EMPTY_ROW: '#/components/schemas/fillEmptyRowStructure'
          REMOVE_COLUMN_BY_INDEX: '#/components/schemas/removeColumnByIndexStructure'
          REMOVE_ROW_BY_INDEX: '#/components/schemas/removeRowByIndexStructure'
          ADD_HEADER_NAME: '#/components/schemas/addHeaderNameStructure'
          REMOVE_HEADER: '#/components/schemas/removeHeaderStructure'
          REMOVE_FOOTER: '#/components/schemas/removeFooterStructure'
          REPLACE_ENTRIES: '#/components/schemas/replaceEntriesStructure'
          SPLIT_ROW: '#/components/schemas/splitRowStructure'
          REMOVE_INVALID_ROWS: '#/components/schemas/removeInvalidRowsStructure'
          REMOVE_TRAILING_COLUMN: '#/components/schemas/removeTrailingColumnStructure'
          MERGE_COLUMNS: '#/components/schemas/mergeColumnsStructure'
        propertyName: converterType
      example:
        name: Resolve Grouped Header
        description: Resolves the grouped header
        converterType: REMOVE_GROUPED_HEADER
        rowIndex:
        - 0
        - 1
        columnIndex:
        - 0
        startRow: 3
        startColumn: 0
      oneOf:
      - $ref: '#/components/schemas/removeRowByIndexStructure'
      - $ref: '#/components/schemas/removeColumnByIndexStructure'
      - $ref: '#/components/schemas/removeGroupedHeaderStructure'
      - $ref: '#/components/schemas/fillEmptyRowStructure'
      - $ref: '#/components/schemas/addHeaderNameStructure'
      - $ref: '#/components/schemas/removeHeaderStructure'
      - $ref: '#/components/schemas/removeFooterStructure'
      - $ref: '#/components/schemas/replaceEntriesStructure'
      - $ref: '#/components/schemas/splitRowStructure'
      - $ref: '#/components/schemas/removeInvalidRowsStructure'
      - $ref: '#/components/schemas/removeTrailingColumnStructure'
      - $ref: '#/components/schemas/mergeColumnsStructure'
      properties:
        converterType:
          $ref: '#/components/schemas/converterType'
        name:
          minLength: 1
          type: string
        description:
          minLength: 1
          type: string
      type: object
    tableStructureSummary:
      example:
        name: name
        structures:
        - converterType: REMOVE_GROUPED_HEADER
        - converterType: REMOVE_GROUPED_HEADER
        id: 1
      properties:
        id:
          format: int64
          minimum: 1
          type: integer
        name:
          minLength: 1
          type: string
        structures:
          items:
            $ref: '#/components/schemas/structureSummary'
          minItems: 0
          type: array
      required:
      - id
      - name
      - structures
      type: object
    structureSummary:
      example:
        converterType: REMOVE_GROUPED_HEADER
      properties:
        converterType:
          $ref: '#/components/schemas/converterType'
      required:
      - converterType
      type: object
    converterType:
      enum:
      - REMOVE_GROUPED_HEADER
      - FILL_EMPTY_ROW
      - REMOVE_COLUMN_BY_INDEX
      - REMOVE_ROW_BY_INDEX
      - ADD_HEADER_NAME
      - REMOVE_FOOTER
      - REMOVE_HEADER
      - REPLACE_ENTRIES
      - SPLIT_ROW
      - REMOVE_INVALID_ROWS
      - REMOVE_TRAILING_COLUMN
      - MERGE_COLUMNS
      type: string
      x-field-extra-annotation: '@de.uol.pgdoener.th1.api.validation.ValidConverterType'
    removeRowByIndexStructure:
      properties:
        converterType:
          $ref: '#/components/schemas/converterType'
        rowIndex:
          items:
            minimum: 0
            type: integer
          minItems: 0
          type: array
      required:
      - converterType
      - rowIndex
      type: object
    removeColumnByIndexStructure:
      properties:
        converterType:
          $ref: '#/components/schemas/converterType'
        columnIndex:
          items:
            minimum: 0
            type: integer
          minItems: 0
          type: array
      required:
      - columnIndex
      - converterType
      type: object
    removeGroupedHeaderStructure:
      properties:
        converterType:
          $ref: '#/components/schemas/converterType'
        rowIndex:
          items:
            minimum: 0
            type: integer
          minItems: 0
          type: array
        columnIndex:
          items:
            minimum: 0
            type: integer
          minItems: 0
          type: array
        startRow:
          minimum: 0
          type: integer
        startColumn:
          minimum: 0
          type: integer
      required:
      - columnIndex
      - converterType
      - rowIndex
      type: object
    addHeaderNameStructure:
      properties:
        converterType:
          $ref: '#/components/schemas/converterType'
        headerNames:
          items:
            minLength: 1
            type: string
          minItems: 0
          type: array
      required:
      - converterType
      - headerNames
      type: object
    fillEmptyRowStructure:
      properties:
        converterType:
          $ref: '#/components/schemas/converterType'
        rowIndex:
          items:
            minimum: 0
            type: integer
          minItems: 0
          type: array
      required:
      - converterType
      - rowIndex
      type: object
    removeHeaderStructure:
      properties:
        converterType:
          $ref: '#/components/schemas/converterType'
        threshold:
          minimum: 0
          type: integer
        blackList:
          items:
            minLength: 0
            type: string
          minItems: 0
          type: array
      required:
      - converterType
      type: object
    removeFooterStructure:
      properties:
        converterType:
          $ref: '#/components/schemas/converterType'
        threshold:
          minimum: 0
          type: integer
        blackList:
          items:
            minLength: 0
            type: string
          minItems: 0
          type: array
      required:
      - converterType
      type: object
    replaceEntriesStructure:
      properties:
        converterType:
          $ref: '#/components/schemas/converterType'
        search:
          minLength: 1
          type: string
        regexSearch:
          minLength: 1
          type: string
        replacement:
          minLength: 0
          type: string
        startRow:
          minimum: 0
          type: integer
        startColumn:
          minimum: 0
          type: integer
        endRow:
          minimum: 0
          type: integer
        endColumn:
          minimum: 0
          type: integer
      required:
      - converterType
      - replacement
      type: object
    splitRowStructure:
      properties:
        converterType:
          $ref: '#/components/schemas/converterType'
        columnIndex:
          minimum: 0
          type: integer
        delimiter:
          minLength: 1
          type: string
        startRow:
          minimum: 0
          type: integer
        endRow:
          minimum: 0
          type: integer
      required:
      - columnIndex
      - converterType
      type: object
    removeInvalidRowsStructure:
      properties:
        converterType:
          $ref: '#/components/schemas/converterType'
        threshold:
          minimum: 0
          type: integer
        blackList:
          items:
            minimum: 0
            type: string
          minItems: 0
          type: array
      required:
      - converterType
      type: object
    removeTrailingColumnStructure:
      properties:
        converterType:
          $ref: '#/components/schemas/converterType'
        threshold:
          minimum: 0
          type: integer
        blackList:
          items:
            minimum: 0
            type: string
          minItems: 0
          type: array
      required:
      - converterType
      type: object
    mergeColumnsStructure:
      properties:
        converterType:
          $ref: '#/components/schemas/converterType'
        columnIndex:
          items:
            minimum: 0
            type: integer
          minItems: 2
          type: array
        headerName:
          minLength: 1
          type: string
        precedenceOrder:
          items:
            minimum: 0
            type: integer
          minItems: 0
          type: array
      required:
      - columnIndex
      - converterType
      - headerName
      type: object
    feedback:
      properties:
        content:
          minLength: 1
          type: string
      required:
      - content
      type: object
    tableStructureGenerationSettings:
      properties:
        removeHeader:
          $ref: '#/components/schemas/removeHeaderSettings'
        removeFooter:
          $ref: '#/components/schemas/removeFooterSettings'
        removeColumns:
          $ref: '#/components/schemas/removeColumnsSettings'
        removeInvalidRows:
          $ref: '#/components/schemas/removeInvalidRowsSettings'
      type: object
    removeHeaderSettings:
      properties:
        enabled:
          default: true
          type: boolean
        threshold:
          default: 2
          minimum: 0
          type: integer
        blockList:
          items:
            minLength: 1
            type: string
          type: array
      type: object
    removeFooterSettings:
      properties:
        enabled:
          default: true
          type: boolean
        threshold:
          default: 2
          minimum: 0
          type: integer
        blockList:
          items:
            minLength: 1
            type: string
          type: array
      type: object
    removeColumnsSettings:
      properties:
        enabled:
          default: true
          type: boolean
        threshold:
          default: 2
          minimum: 0
          type: integer
        blockList:
          items:
            minLength: 1
            type: string
          type: array
      type: object
    removeInvalidRowsSettings:
      properties:
        enabled:
          default: true
          type: boolean
        threshold:
          default: 2
          minimum: 0
          type: integer
        blockList:
          items:
            minLength: 1
            type: string
          type: array
      type: object
    reportType:
      enum:
      - COLUMN_TYPE_MISMATCH
      - GROUPED_HEADER
      - EMPTY_HEADER
      - EMPTY_ROW
      - EMPTY_COLUMN
      - SAME_AS_HEADER
      - MISSING_ENTRY
      - MERGEABLE_COLUMNS
      - SPLIT_ROW
      type: string
      x-field-extra-annotation: '@de.uol.pgdoener.th1.api.validation.ValidReportType'
    report:
      discriminator:
        mapping:
          COLUMN_TYPE_MISMATCH: '#/components/schemas/columnTypeMismatchReport'
          GROUPED_HEADER: '#/components/schemas/groupedHeaderReport'
          EMPTY_HEADER: '#/components/schemas/emptyHeaderReport'
          EMPTY_ROW: '#/components/schemas/emptyRowReport'
          EMPTY_COLUMN: '#/components/schemas/emptyColumnReport'
          SAME_AS_HEADER: '#/components/schemas/sameAsHeaderReport'
          MISSING_ENTRY: '#/components/schemas/missingEntryReport'
          MERGEABLE_COLUMNS: '#/components/schemas/mergeableColumnsReport'
          SPLIT_ROW: '#/components/schemas/splitRowReport'
        propertyName: reportType
      example:
        reportType: EMPTY_COLUMN
        columnIndex: 42
      oneOf:
      - $ref: '#/components/schemas/columnTypeMismatchReport'
      - $ref: '#/components/schemas/groupedHeaderReport'
      - $ref: '#/components/schemas/emptyHeaderReport'
      - $ref: '#/components/schemas/emptyRowReport'
      - $ref: '#/components/schemas/emptyColumnReport'
      - $ref: '#/components/schemas/sameAsHeaderReport'
      - $ref: '#/components/schemas/missingEntryReport'
      - $ref: '#/components/schemas/mergeableColumnsReport'
      - $ref: '#/components/schemas/splitRowReport'
      properties:
        reportType:
          $ref: '#/components/schemas/reportType'
      required:
      - reportType
      type: object
    columnTypeMismatchReport:
      description: |
        This report indicates that entries in the specified column are not of the same type.
        This excludes the first row as it assumes the first row is a header.

        The reportType MUST be COLUMN_TYPE_MISMATCH.
      properties:
        reportType:
          $ref: '#/components/schemas/reportType'
        columnIndex:
          items:
            minimum: 0
            type: integer
          type: array
      required:
      - columnIndex
      - reportType
      type: object
    groupedHeaderReport:
      description: |
        This report indicates that the table contains a grouped header.
        The parameters describe the guessed location of the grouped header.

        The reportType MUST be GROUPED_HEADER.
      properties:
        reportType:
          $ref: '#/components/schemas/reportType'
        rowIndex:
          items:
            minimum: 0
            type: integer
          minItems: 1
          type: array
        columnIndex:
          items:
            minimum: 0
            type: integer
          minItems: 1
          type: array
        startRow:
          minimum: 0
          type: integer
        startColumn:
          minimum: 0
          type: integer
      required:
      - columnIndex
      - reportType
      - rowIndex
      - startColumn
      - startRow
      type: object
    emptyHeaderReport:
      description: |
        This report indicates that the specified column header is empty or undefined.
        It is assumed that the first row is the header.

        The reportType MUST be EMPTY_HEADER.
      properties:
        reportType:
          $ref: '#/components/schemas/reportType'
        columnIndex:
          items:
            minimum: 0
            type: integer
          type: array
      required:
      - columnIndex
      - reportType
      type: object
    emptyRowReport:
      description: |
        This report indicates that the specified row is empty.

        The reportType MUST be EMPTY_ROW.
      properties:
        reportType:
          $ref: '#/components/schemas/reportType'
        rowIndex:
          items:
            minimum: 0
            type: integer
          type: array
      required:
      - reportType
      - rowIndex
      type: object
    emptyColumnReport:
      description: |
        This report indicates that the specified column is empty.

        The reportType MUST be EMPTY_COLUMN.
      properties:
        reportType:
          $ref: '#/components/schemas/reportType'
        columnIndex:
          items:
            minimum: 0
            type: integer
          type: array
      required:
      - columnIndex
      - reportType
      type: object
    sameAsHeaderReport:
      description: |
        This report indicates that the specified cell is the same as the header of the column.
        The first row is assumed to be the header.

        The reportType MUST be SAME_AS_HEADER.
      properties:
        reportType:
          $ref: '#/components/schemas/reportType'
        cells:
          items:
            $ref: '#/components/schemas/position'
          type: array
      required:
      - columnIndex
      - reportType
      - rowIndex
      type: object
    missingEntryReport:
      description: |
        This report indicates that the specified cell is empty or undefined.
        This is report is generated if other cells in the same row are not empty.

        The reportType MUST be MISSING_ENTRY.
      properties:
        reportType:
          $ref: '#/components/schemas/reportType'
        cells:
          items:
            $ref: '#/components/schemas/position'
          type: array
      required:
      - columnIndex
      - reportType
      - rowIndex
      type: object
    mergeableColumnsReport:
      description: |
        This report indicates that the specified columns are mergeable.
        This is report is generated if a tuple of columns have entries where other columns in the tuple are empty.

        The reportType MUST be MERGEABLE_COLUMNS.
      properties:
        reportType:
          $ref: '#/components/schemas/reportType'
        mergeables:
          items:
            minimum: 0
            type: integer
          type: array
      required:
      - columnIndex
      - reportType
      type: object
    splitRowReport:
      description: |
        This report indicates that the specified row can be split into multiple rows.

        The reportType MUST be SPLIT_ROW.
      properties:
        reportType:
          $ref: '#/components/schemas/reportType'
        rowIndex:
          items:
            minimum: 0
            type: integer
          type: array
      required:
      - reportType
      - rowIndex
      type: object
    tableStructureGenerationResponse:
      example:
        reports:
        - reportType: EMPTY_COLUMN
          columnIndex: 42
        - reportType: EMPTY_COLUMN
          columnIndex: 42
        tableStructure:
          id: 1
          name: Table structure 1
          structures:
          - name: Fill Header
            description: Fills empty cells in the header
            converterType: FILL_EMPTY_ROW
            rowIndex:
            - 0
            - 1
          - name: Resolve Grouped Header
            description: Resolves the grouped header
            converterType: REMOVE_GROUPED_HEADER
            rowIndex:
            - 0
            - 1
            columnIndex:
            - 0
            startRow: 3
            startColumn: 0
      properties:
        tableStructure:
          $ref: '#/components/schemas/tableStructure'
        reports:
          items:
            $ref: '#/components/schemas/report'
          type: array
      required:
      - reports
      - tableStructure
      type: object
    position:
      properties:
        rowIndex:
          minimum: 0
          type: integer
        columnIndex:
          minimum: 0
          type: integer
      required:
      - columnIndex
      - rowIndex
      type: object
    generateTableStructure_request:
      properties:
        file:
          format: binary
          type: string
        settings:
          $ref: '#/components/schemas/tableStructureGenerationSettings'
      type: object
    convertTable_request:
      properties:
        file:
          format: binary
          type: string
      required:
      - file
      type: object
    previewConvertTable_request:
      properties:
        file:
          format: binary
          type: string
        tableStructure:
          $ref: '#/components/schemas/tableStructure'
      required:
      - file
      - tableStructure
      type: object
  securitySchemes:
    BasicAuth:
      scheme: basic
      type: http
