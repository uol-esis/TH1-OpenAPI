file:
  post:
    summary: Convert a table and return the result as a file
    operationId: fileConvertTable
    security:
      - oAuth2Auth:
        - read:converter
    requestBody:
      content:
        multipart/form-data:
          schema:
            type: object
            required: [ file, tableStructure ]
            properties:
              file:
                type: string
                format: binary
              tableStructure:
                $ref: '../components/schemas/tableStructure.yaml'
    responses:
      '200':
        description: OK
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      '400':
        description: Bad request
      '401':
        description: Unauthorized

preview:
  post:
    summary: Convert a table and return a preview of the result
    operationId: previewConvertTable
    security:
      - oAuth2Auth:
        - read:converter
    parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          default: 10
    requestBody:
      content:
        multipart/form-data:
          schema:
            type: object
            required: [ file, tableStructure ]
            properties:
              file:
                type: string
                format: binary
              tableStructure:
                $ref: '../components/schemas/tableStructure.yaml'
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              type: array
              items:
                type: array
                items:
                  type: string
      '400':
        description: Bad request
      '401':
        description: Unauthorized

table-structure-id:
  post:
    summary: Convert a table and save it to the database
    operationId: convertTable
    security:
      - oAuth2Auth:
        - write:converter
    parameters:
      - name: tableStructureId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
      - name: mode
        in: query
        required: false
        schema:
          type: string
          enum: [ CREATE, EXTEND, REPLACE, RESTRUCTURE ]
          default: "CREATE"
    requestBody:
      content:
        multipart/form-data:
          schema:
            type: object
            required: [ file ]
            properties:
              file:
                type: string
                format: binary
    responses:
      '200':
        description: OK
      '400':
        description: Bad request
      '401':
        description: Unauthorized
      '404':
        description: Not found
